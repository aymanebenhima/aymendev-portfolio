@keyframes moveInLeft {
  0% {
      opacity: 0;
      transform: translateX(-10rem);
  }

  80% {
      transform: translateX(1rem);
  }

  100% {
      opacity: 1;
      transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
      opacity: 0;
      transform: translateX(10rem);
  }

  80% {
      transform: translateX(-1rem);
  }

  100% {
      opacity: 1;
      transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
      opacity: 0;
      transform: translateY(3rem);
  }

  100% {
      opacity: 1;
      transform: translate(0);
  }
}

@keyframes border-transform{
  0%,100% { border-radius: 63% 37% 54% 46% / 55% 48% 52% 45%; }
14% { border-radius: 40% 60% 54% 46% / 49% 60% 40% 51%; }
28% { border-radius: 54% 46% 38% 62% / 49% 70% 30% 51%; }
42% { border-radius: 61% 39% 55% 45% / 61% 38% 62% 39%; }
56% { border-radius: 61% 39% 67% 33% / 70% 50% 50% 30%; }
70% { border-radius: 50% 50% 34% 66% / 56% 68% 32% 44%; }
84% { border-radius: 46% 54% 50% 50% / 35% 61% 39% 65%; }
}

@keyframes cursorBlink {
  49% { background-color: var(--container-color); }
  50% { background-color: transparent; }
  99% { background-color: transparent; }
}

/* Glitch */

/* Creates an animation with 20 steaps. For each step, it calculates
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
			transform: skew((random(100) / 100) + deg);
    }
  }
}

// Same deal, just duplicated for ultra randomness.
@keyframes glitch-anim2 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
			transform: skew((random(100) / 100) + deg);
    }
  }
}

// Does the same deal as before, but now only skews. Used for main text.
@keyframes glitch-skew {
  $steps: 10;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      transform: skew((random(10) - 5) + deg);
    }
  }
}

/* Loader */

@keyframes loader-ring {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Skeleton */

@keyframes pulse-bg {
  0% {
    background: #eee;
  }
  50% {
    background: #E6E7EA;
  }
  100% {
    background: #CECFD5;
  }
}

@keyframes pulse-text {
  0% {
    background: #EFF1FA;
  }
  50% {
    background: #DFE3F6;
  }
  100% {
    background: #CFD5F2;
  }
}

/* Bounce animation */
@keyframes bounce {
	0%, 20%, 50%, 80%, 100% {transform: translateY(0);}
/* 	40% {transform: translateY(-2.5rem);} */
	60% {transform: translateY(-1rem);}
}
